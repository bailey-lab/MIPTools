Bootstrap: docker
From: amd64/ubuntu:24.04

# Bootstrap: localimage
# From: miptools_.sif

%arguments
    MIPTOOLS_VERSION=0.5.2
    CPU_COUNT=8

%setup
    sed -i "s/config_file_version:.*/config_file_version: {{ MIPTOOLS_VERSION }}/g" \
            ../base_resources/user_scripts_and_config/config.yaml
    rm -rf ${SINGULARITY_ROOTFS}/opt/src
    rm -rf ${SINGULARITY_ROOTFS}/opt/snakemake
    rm -rf ${SINGULARITY_ROOTFS}/opt/resources
    rm -rf ${SINGULARITY_ROOTFS}/opt/scif_recipes.scif
    rm -rf ${SINGULARITY_ROOTFS}/opt/conda_environment.yaml
##################################################################
##                        Labels Section                        ##
##################################################################
%labels
    Author Bailey Lab
    Version {{ MIPTOOLS_VERSION }}
#################################################################
##                        Files Section                        ##
#################################################################
%files
    ../programs /opt
    ../bin /opt
    ../src /opt
    ../snakemake /opt
    ../base_resources/ /opt/resources
    scif_recipes.scif /opt
    conda_environment.yaml /opt
%post
    # install system packages
    apt-get update \
    && apt-get -yq dist-upgrade \
    && apt-get install -yq --no-install-recommends \
    texlive-xetex \
    texlive-latex-extra \
    texlive-fonts-recommended \
    texlive-latex-recommended \
    texlive-plain-generic \
    alien \
    autoconf \
    automake \
    build-essential \
    bzip2 \
    ca-certificates \
    cmake \
    curl \
    fonts-dejavu \
    fonts-liberation \
    g++-10 \
    gcc-10 \
    ghostscript \
    git \
    less \
    libbz2-dev \
    libcurl4-gnutls-dev \
    liblzma-dev \
    libssl-dev \
    libtbb-dev \
    libxext6 \
    libxrender1 \
    libxrender1 \
    libz-dev \
    locales \
    micro \
    nano \
    openjdk-11-jdk \
    openssh-client \
    pandoc \
    perl-tk \
    pigz \
    pip \
    rsync \
    software-properties-common \
    sudo \
    tree \
    unzip \
    wget \
    wl-clipboard \
    xclip

    export PATH=/conda_env/bin:$PATH    
    if [ -z $(which micromamba) ]; then
        cd /usr
        curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
    fi
    if [ ! -d /conda_env ]; then
        micromamba create -yq -p /conda_env -f /opt/conda_environment.yaml
        # install magrittr
        Rscript -e 'devtools::install_version(
            package = "magrittr",
            version = "2.0.3",
            repos = "https://cloud.r-project.org"
        )'

        # install RealMcCoil
        Rscript -e 'devtools::install_github("OJWatson/McCOILR", ref = "v1.3.1")'

        # install rehh
        Rscript -e 'devtools::install_version(
            package = "rehh", 
            version = "3.2.2",
            repos = "https://cloud.r-project.org"
        )'
        micromamba clean -ay
    else
        # implement any changes to the conda environment
        micromamba env update --prune -yq -p /conda_env -f /opt/conda_environment.yaml
        micromamba clean -ay
    fi

        mkdir -p /opt/bin
    mkdir -p /opt/programs

    # install vt variant tool set
    if [ -z $(which vt) ]; then
        cd /opt/programs
        git clone --branch 0.577 https://github.com/atks/vt.git
        cd vt
        make -j $CPU_COUNT
        mv vt /opt/bin/
    fi

    #install mipwrangler
    if [ -z $(which MIPWrangler) ]; then
        cd /opt/bin && rm -rf MIPWrangler
        git clone --branch develop https://github.com/bailey-lab/MIPWrangler.git
        cd MIPWrangler
        git checkout 9ee0ccdbf86dd719c22ce4c3ccd449d09c9a3623
        ./install.sh {{ CPU_COUNT }}
        rm -rf external/build
    fi

    # install parasight
    if [ -z $(which parasight.pl) ]; then
        cd /opt/programs
        git clone --branch v7.6 https://github.com/bailey-lab/parasight.git
        mv parasight/parasight.pl /opt/bin/
        rm -r parasight
    fi
    # install basespace cli
    if [ -z $(which bs) ]; then
        BS_VERSION=1.5.1
        BS_PATH="https://launch.basespace.illumina.com/CLI/${BS_VERSION}/amd64-linux/bs"
        wget $BS_PATH -O /opt/bin/bs
    fi

    # install bcl2fastq, if the file is there
    if [ -z $(which bcl2fastq) ]; then
        cd /opt/programs
        if [ -f bcl2fastq2*.zip ]; then 
            unzip bcl2fastq2*.zip
            alien bcl2fastq2*.rpm
            dpkg -i bcl2fastq2*.deb 
        fi
    fi

    scif install /opt/scif_recipes.scif

    # add executable flag to executables
    chmod -R +xr /usr/bin
    chmod -R +xr /opt/bin
    chmod 777 -R /opt

    # set environment locale
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    echo "LANG=en_US.UTF-8" > /etc/locale.conf
    echo "LC_ALL=en_US.UTF-8" >> /etc/environment
    echo "LANGUAGE=en_US.UTF-8" >> /etc/environment
    locale-gen en_US.UTF-8
    update-locale LANG=en_US.UTF-8


#################################################################
##                     Environment Section                     ##
#################################################################
%environment
    export PATH=/opt/bin:/conda_env/bin:/opt/bin/MIPWrangler/bin:$PATH
    export XDG_RUNTIME_DIR=""
    export DEBIAN_FRONTEND=noninteractive
    export LANG=en_US.UTF-8
    export LANGUAGE="en_US.UTF-8"
    export LC_ALL="en_US.UTF-8"
    export PYTHONNOUSERSITE=1
    export VERSION={{ MIPTOOLS_VERSION }}


#############################################################
###                Setup Runscript                              ###
# copies run scripts and config files into the current directory
#############################################################
%runscript
    rsync -aP /opt/resources/user_scripts_and_config/config.yaml /opt/config/config_{{ MIPTOOLS_VERSION }}.yaml --ignore-existing
    rsync -aP /opt/resources/user_scripts_and_config/run_miptools.sh /opt/config/run_miptools_{{ MIPTOOLS_VERSION }}.sh --ignore-existing
    rsync -aP /opt/resources/user_scripts_and_config/micro /opt/config/micro
